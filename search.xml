<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>lucene学习笔记</title>
      <link href="/2018/08/21/lucene%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/08/21/lucene%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h1 id="lucene查询语法"><a href="#lucene查询语法" class="headerlink" title="lucene查询语法"></a>lucene查询语法</h1><p><img src="http://pbc08qnfq.bkt.clouddn.com/images/lucene%E8%AF%AD%E6%B3%95%E4%B8%80.png" alt="lucene查询语法"></p><p><img src="http://pbc08qnfq.bkt.clouddn.com/images/lucene%E8%AF%AD%E6%B3%95%E4%BA%8C.png" alt=""></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>sklearn内DBSCAN的简单应用</title>
      <link href="/2018/07/04/sklearn%E5%86%85DBSCAN%E7%9A%84%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/"/>
      <url>/2018/07/04/sklearn%E5%86%85DBSCAN%E7%9A%84%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/</url>
      <content type="html"><![CDATA[<h1 id="1-先描述一下需求"><a href="#1-先描述一下需求" class="headerlink" title="1. 先描述一下需求"></a>1. 先描述一下需求</h1><p>使用DBSCAN算法对之前作业中给出的countries_data数据进行聚类。</p><p>具体要求和提示：</p><p>1）用图形可视化地显示你的聚类效果，提交执行结果的截图。</p><p>2）聚类属于非监督学习，载入数据时不应该有label。</p><p>3）请使用Python或R。</p><p>4）对于你调用的核心函数，选取至少三个参数列表中的参数，解释它们的含义。</p><p>5）提交完整的（包括引用必要头文件所需的代码）可以执行的代码，代码部分请不要以截图方式提交，因为无法复制粘贴而不能运行的代码将无法判定正确与否。</p><h1 id="2-贴一下完整的代码"><a href="#2-贴一下完整的代码" class="headerlink" title="2. 贴一下完整的代码"></a>2. 贴一下完整的代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> DBSCAN</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">data = pd.read_csv(<span class="string">'/Users/dongheng/Desktop/countries_data.csv'</span>)</span><br><span class="line">x = np.array((data[<span class="string">'Services_of_GDP'</span>], data[<span class="string">'ages65_of_total'</span>]))</span><br><span class="line">x1 = np.arange(<span class="number">60.0</span>).reshape(<span class="number">30</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">    x1[[n,n],[<span class="number">0</span>,<span class="number">1</span>]]=x[[<span class="number">0</span>,<span class="number">1</span>],[n,n]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(x1)</span></span><br><span class="line"><span class="comment"># x_train, x_test, y_train, y_test = train_test_split(x1, y, test_size=0.2, random_state=42)</span></span><br><span class="line"><span class="comment">#eps 在这个距离内的两个样本被视为相邻</span></span><br><span class="line"><span class="comment">#min_samples  最少包含min_samples个样本的点才被称为核心点</span></span><br><span class="line"><span class="comment">#n_jobs    CPU并行数</span></span><br><span class="line">db = DBSCAN(eps=<span class="number">10</span>, min_samples=<span class="number">2</span>, n_jobs=<span class="number">4</span>).fit(x1)</span><br><span class="line">labels = db.labels_</span><br><span class="line">print(labels)</span><br><span class="line">y0 = x1[labels == <span class="number">0</span>]</span><br><span class="line">y1 = x1[labels == <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">plt.scatter(y0[:, <span class="number">0</span>],y0[<span class="number">0</span>:,<span class="number">1</span>],c=<span class="string">'r'</span>, marker=<span class="string">"^"</span>, label=<span class="string">"label1"</span>)</span><br><span class="line">plt.scatter(y1[:, <span class="number">0</span>],y1[<span class="number">0</span>:,<span class="number">1</span>],c=<span class="string">'g'</span>, marker=<span class="string">"o"</span>, label=<span class="string">"label2"</span>)<span class="comment">#c 表示调颜色  #marker 表示调样本点的形状</span></span><br><span class="line">plt.legend(loc=<span class="number">2</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id="3-测试图片"><a href="#3-测试图片" class="headerlink" title="3. 测试图片"></a>3. 测试图片</h1><p><img src="http://pbc08qnfq.bkt.clouddn.com/images/testtest.jpg" width="200"></p>]]></content>
      
      <categories>
          
          <category> 数据分析 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>hexo博客搭建</title>
      <link href="/2018/06/29/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2018/06/29/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1.  前言"></a>1.  前言</h1><p>之前也尝试搭建过基于WordPress的个人博客网站，后来也没维护过，就不了了之，偶然一天发现同学朋友圈分享的个人博客网站，打开之后耳目一新，便询问之怎么做的，同学告知是基于Hexo+GitHub+Mac搭建的。于是，就在心里种下了草，心想我也要搭建一个个人博客，这样可以把自己学习过的知识点记录下来，也可以写一些自己想写的其他一些东西，于是便有了这个个人博客。此篇博客的大部分参考了<a href="https://www.jianshu.com/p/cbf8ba8af532" target="_blank" rel="noopener">https://www.jianshu.com/p/cbf8ba8af532</a>；还有网络上其他博客。</p><h1 id="2-以下是我的搭建历程和踩过的坑"><a href="#2-以下是我的搭建历程和踩过的坑" class="headerlink" title="2.  以下是我的搭建历程和踩过的坑"></a>2.  以下是我的搭建历程和踩过的坑</h1><h2 id="2-1-安装Node-js-和Git"><a href="#2-1-安装Node-js-和Git" class="headerlink" title="2.1  安装Node.js 和Git"></a>2.1  安装Node.js 和Git</h2><p>我本来想通过终端brew命令直接进行安装，后来看网上的教程大都是去官网直接进行下载，然后解压进行安装，于是我也采用了这种模式。</p><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">node.js的官网下载页面</a></p><p>选择 <strong>macOS Installer(.pkg)             64-bit</strong>版本，下载安装即可。</p><p>会默认安装在/usr/local/bin目录下，另外说一句，通过终端brew命令，下载下来的也都放在这个目录下。</p><p>然后在终端敲入两条命令进行检查，看是否node安装完成。</p><p>第一条命令及结果（版本不同，结果可能略有不同）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v  #命令</span><br><span class="line">v8.11.3  #结果</span><br></pre></td></tr></table></figure><p>第二条命令及结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm -v   #命令</span><br><span class="line">5.6.0    #结果</span><br></pre></td></tr></table></figure><h2 id="2-2-安装hexo"><a href="#2-2-安装hexo" class="headerlink" title="2.2  安装hexo"></a>2.2  安装hexo</h2><p>安装命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo  #-g表示全局安装</span><br></pre></td></tr></table></figure><h2 id="2-3-博客初始化"><a href="#2-3-博客初始化" class="headerlink" title="2.3  博客初始化"></a>2.3  博客初始化</h2><p>当时我是在Macintosh HD下新建了一个文件夹myblog，然后鬼使神差的又在这个目录下又建了一个文件夹blog，导致我现在进入目录进行操作时，需要进入二级目录才可以，每次都多一步操作。。</p><p>现在需要进入相应文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /myblog/blog</span><br></pre></td></tr></table></figure><p>进入之后呢，需要进行初始化命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>按照网上所查教程到这一步，就提示错误了，提示的是类似“please npm manually”的错误，意思是请手动安装npm，解决办法就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install</span><br></pre></td></tr></table></figure><p>然后，再 hexo init就可以了，再通过执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   #hexo generate的缩写</span><br><span class="line">hexo s   #hexo sever的缩写</span><br></pre></td></tr></table></figure><p>再打开<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><p>即可看到本地博客。</p><h1 id="3-本地博客关联Github"><a href="#3-本地博客关联Github" class="headerlink" title="3. 本地博客关联Github"></a>3. 本地博客关联Github</h1><p>首先你需要有个GitHub的账号，然后在GitHub上新建一个仓库，并且这个仓库的名字需要严格按照如下格式，不然就会出现错误：</p><p><strong>github的名字.github.io</strong></p><p>注意其中的点，除了<strong>名字那部分</strong>需要变，其他则不需要变化。</p><p>然后终端进入blog文件夹下，其实也可以在finder下进入，打开_config.yml文件，拉到文件最底端，加入如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/你的github的名字/你的github的名字.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>注意type，repository，branch冒号后门有需要输入一个空格，再输入其他文字，这里有个格式要求，需要注意。</p><p>然后在终端下blog文件下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   #hexo generate的缩写 </span><br><span class="line">hexo d   #hexo deploy的缩写</span><br></pre></td></tr></table></figure><blockquote><p>网上的教程说到:若执行<code>hexo g</code>出错则执行<code>npm install hexo --save</code>，若执行<code>hexo d</code>出错则执行<code>npm install hexo-deployer-git --save</code>。错误修正后再次执行<code>hexo g</code>和<code>hexo d</code>上传到服务器。</p></blockquote><p>此外如果没有关联到github，执行hexo d时，会提示输入github的账户和密码，按提示操作即可。</p><h2 id="3-1-添加ssh-keys到GitHub"><a href="#3-1-添加ssh-keys到GitHub" class="headerlink" title="3.1 添加ssh keys到GitHub"></a>3.1 添加ssh keys到GitHub</h2><blockquote><p>添加ssh key后不需要每次更新博客再输入用户名和密码。首先检查本地是否包含ssh keys。如果存在则直接将ssh key添加到GitHub之中，否则新生成ssh key。</p><p>执行下述命令生成新的ssh key，将<a href="mailto:`your_email@example.com" target="_blank" rel="noopener">`your_email@example.com</a><code>改成自己注册的GitHub邮箱地址。默认会在</code>~/.ssh/id_rsa.pub<code>中生成</code>id_rsa<code>和</code>id_rsa.pub`文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; ssh-keygen -t rsa -C &quot;your_email@exampl&quot;        </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>Mac下利用<code>open ~/.ssh</code>打开文件夹，打开id_rsa.pub文件，里面的信息即为ssh key，将此信息复制到GitHub的Add ssh key<code>路径GitHub-&gt;Setting-&gt;SSH keys-&gt;add SSH key</code>中即可。Title里填写任意标题，将复制的内容粘贴到key中，点击Add key完成添加。</p><p>此时本地博客内容便已关联到GitHub之中，本地博客改变之后，通过<code>hexo g</code>和<code>hexo d</code>便可更新到GitHub之中，通过访问便可看到更新内容。</p></blockquote><p> 由于我之前搭建其他平台的时候，就已经处理过，所以我的/.ssh/id_rsa.pub文件下，已经有id_rsa和id_rsa.pub文件，并且将SSH登录设置成了免密登录。</p><p>再次通过hexo g与hexo d，可能需要稍微等上那么一小会儿，就可以通过<a href="https://你的github名字.github.io" target="_blank" rel="noopener">https://你的github名字.github.io</a>进行访问。</p><h1 id="4-更换主题"><a href="#4-更换主题" class="headerlink" title="4. 更换主题"></a>4. 更换主题</h1><p>上述那些其实，都不难，也不会出现什么错误，按照操作一遍，就可以。对于主题这一块，有那么一些坑，我找了几天才解决。</p><p>首先需要，在blog目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>上述命令是将next主题，拷贝到目标目录中。</p><p>然后将blog目录下的_config.yml（这个文件也被称为<strong>站点配置文件</strong>），打开：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title:    #网站标题</span><br><span class="line">subtitle:  #网站副标题   </span><br><span class="line">description: 君子曰：“学不可以已。积土成山，风雨兴焉”。#网站描述</span><br><span class="line">keywords:</span><br><span class="line">author:    #网站作者的名字</span><br><span class="line">language: zh-Hans #网站使用的语言</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure><p> 刚才clone下来的主题，在blog文件夹下，有/themes/next/文件夹下，也有_config.yml文件，这个文件被称为<strong>主题配置文件</strong>，打开后可以进行一些配置：</p><p>内容标题一看，就挺简单，暂且不述，需要说的一点是更换hexo主题的模式，其一共自带了四种模式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure><p>默认是第一个Muse模式，我选择了第三个模式，这个就是萝卜白菜各有所爱了。</p><h1 id="5-设置首页不显示全文"><a href="#5-设置首页不显示全文" class="headerlink" title="5. 设置首页不显示全文"></a>5. 设置首页不显示全文</h1><p>打开主题配置文件_config.yml，找到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><p> 更改成如上字样保存，重新部署即可。</p><h1 id="6-酷炫的动态背景"><a href="#6-酷炫的动态背景" class="headerlink" title="6.  酷炫的动态背景"></a>6.  酷炫的动态背景</h1><p>就是那种背景图动态模样，暂时不知怎么加图，先记下怎么生成的：</p><p>打开/myblog/blog/themes/next/layout/_layout.swig文件</p><p>在前加入：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type="text/javascript" src="//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>此外也可以在上述代码中，添加如下参数，进行一些调整：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">color ：线条颜色, 默认: &apos;0,0,0&apos;；三个数字分别为(R,G,B)</span><br><span class="line">opacity: 线条透明度（0~1）, 默认: 0.5</span><br><span class="line">count: 线条的总数量, 默认: 150</span><br><span class="line">zIndex: 背景的z-index属性，css属性用于控制所在层的位置, 默认: -1</span><br></pre></td></tr></table></figure><p>打开主题配置文件（放最后）设置成如下样子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Canvas-nest</span><br><span class="line">canvas_nest: true</span><br></pre></td></tr></table></figure><p>重新hexo clean &amp;&amp; hexo g &amp;&amp; hexo d即可。</p><h1 id="7-hexo的分类页面和标签页面"><a href="#7-hexo的分类页面和标签页面" class="headerlink" title="7.  hexo的分类页面和标签页面"></a>7.  hexo的分类页面和标签页面</h1><h2 id="7-1-分类页面"><a href="#7-1-分类页面" class="headerlink" title="7.1 分类页面"></a>7.1 分类页面</h2><p>需要在blog终端下，键入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>然后就会在/blog/source下生成一个categories文件夹，里面会有一个index.md文件</p><p>然后打开/scaffolds/post.md文件，在tags:上面加入categories:保存，重新执行新建命令hexo n 博客的名字 ，就会发现有categories:项，当你在这一栏输入文字后，就会在分类页面看到相应的文章了。</p><h2 id="7-2-标签页面"><a href="#7-2-标签页面" class="headerlink" title="7.2 标签页面"></a>7.2 标签页面</h2><p>基本操作7.1类似，把categories换成，tags即可。</p><p>此外需要说明的一点是，需要在/tags/index.md文件内，加入layout: “tags”才可以正常显示云词。</p><h1 id="8-删除文件"><a href="#8-删除文件" class="headerlink" title="8 删除文件"></a>8 删除文件</h1><p>直接在本地删除即可，然后再通过hexo g &amp;&amp; hexo d进行重新部署，就会发现文件已删除。</p><h1 id="9-目录出现自动标号"><a href="#9-目录出现自动标号" class="headerlink" title="9 目录出现自动标号"></a>9 目录出现自动标号</h1><p>解决办法是在/themes/next/_config.yml 文件内找到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Table Of Contents in the Sidebar</span><br><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: false          #改成false即可</span><br></pre></td></tr></table></figure><h1 id="10-插入图片"><a href="#10-插入图片" class="headerlink" title="10 插入图片"></a>10 插入图片</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">""</span>&gt;</span></span><br></pre></td></tr></table></figure><p>插入如上所示代码，可以调节图片大小格式位置等</p><p>将七牛云作为图床，可以去参考这篇博客的设置说明，<a href="http://skyhacks.org/2017/08/02/UseQiniudnToStorePic/" target="_blank" rel="noopener">七牛云图床设置</a>，这里简要记录下平时同步图片到云端的操作。</p><p>将图片存储到 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/myblog/blog/source/qiniudn/images</span><br></pre></td></tr></table></figure><p>文件夹里，</p><p>使用如下命令在项目根目录进行下同步：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hexo s    #第一种方式</span><br><span class="line">hexo qiniu sync|sync2  #第二种方式</span><br><span class="line"></span><br><span class="line">#以下就是解释</span><br><span class="line">qiniu sync plugin for hexo</span><br><span class="line">Usage: hexo qiniu  &lt;argument&gt;</span><br><span class="line">Description:</span><br><span class="line">hexo qiniu static files sync plugin</span><br><span class="line">Arguments:</span><br><span class="line">  info | i    Displays plugin version, aurthor or GitHub links</span><br><span class="line">  sync | s    Sync your static files to qiniu.</span><br><span class="line">  sync2 | s2  Sync your static files to qiniu.(And uploaded update files)</span><br></pre></td></tr></table></figure><p>同步完成后，本地图片删除，云端也不会删除。</p><p>打开自己的七牛云</p><p><img src="http://pbc08qnfq.bkt.clouddn.com/images/%E4%B8%83%E7%89%9B%E4%BA%91%E5%BC%95%E7%94%A8.png"></p><p>复制外链后，然后在写博客时，引用即可。</p><h1 id="11-添加评论和博客阅读统计"><a href="#11-添加评论和博客阅读统计" class="headerlink" title="11 添加评论和博客阅读统计"></a>11 添加评论和博客阅读统计</h1><p>首先在leancloud注册一个账号，<a href="https://leancloud.cn" target="_blank" rel="noopener">leancloud官网</a>，注册完成后，创建新应用，新应用的名字无所谓，然后在新应用里创建新的class，class的名字须为counter</p><p><img src="http://pbc08qnfq.bkt.clouddn.com/images/leancloud%E8%AE%BE%E7%BD%AE%E5%9B%BE%E7%89%87.png"></p><p>如图所示，右上角的设置按钮，点进去，创建新的class，并在里面</p><p><img src="http://pbc08qnfq.bkt.clouddn.com/images/leancloud%E7%9A%84app_id&&app_key.png"></p><p>在设置里找到app id与app key,然后在/themes/next/_config.yml文件内</p><p>开启评论设置：</p><p><img src="http://pbc08qnfq.bkt.clouddn.com/images/hexo%E5%BC%80%E5%90%AF%E8%AF%84%E8%AE%BA%E8%AE%BE%E7%BD%AE.png"></p><p>开启统计数据设置：</p><p><img src="http://pbc08qnfq.bkt.clouddn.com/images/hexo%E5%BC%80%E5%90%AF%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE%E8%AE%BE%E7%BD%AE.png"></p><p>设置完成后，再终端同步部署一下，即可。</p><h1 id="12-搜索"><a href="#12-搜索" class="headerlink" title="12 搜索"></a>12 搜索</h1><p><a href="http://theme-next.iissnan.com/third-party-services.html#search-system" target="_blank" rel="noopener">参考文档</a></p><p>1 安装<strong>hexo-generator-searchdb</strong>，在根部目下执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>2 编辑<strong>站点配置文件</strong>，新增以下内容到任意位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">path: search.xml</span><br><span class="line">field: post</span><br><span class="line">format: html</span><br><span class="line">limit: 10000</span><br></pre></td></tr></table></figure><p>3 编辑<strong>主题配置文件</strong>，启用本地搜索功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">enable: true</span><br></pre></td></tr></table></figure><h1 id="13-设置头像"><a href="#13-设置头像" class="headerlink" title="13 设置头像"></a>13 设置头像</h1><p>打开<strong>主题配置文件</strong>，找到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#avatar: /images/avatar.git            #将之前的avatar之前的#号消掉</span><br></pre></td></tr></table></figure><p>然后在主题配置文件的相应文件夹内添加想要设置的图片，并在上述的配置文件代码位置修改一下就ok，也可以修改为一个网络链接地址。</p><p>未完待续..</p>]]></content>
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
